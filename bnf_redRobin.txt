PROGRAM ::= 'class' 'RedRobin' '{' CUERPOPROGRAM '}'
CUERPOPROGRAM ::= CODIGO 'redRobin' '(' ')' '{' CUERPOFUNCION '}' 
CODIGO ::= (CLASES | FUNCIONES)*

FUNCIONES::= 'func' PRIVILAGES (TIPOVARIABLE|'empty') 'id' '(' PARAMETROS ')' '{' CUERPOFUNCION '}'
PRIVILAGES ::= 'secret' | 'public' 
TIPOVARIABLE ::= 'number'|'real'|'string'|'bool'|'id'
PARAMETROS ::= ( TIPOVARIABLE ('[' ']')? ':' 'id' (',' 'id')* ( ';' TIPOVARIABLE ('[' ']')? ':' 'id' (',' 'id')* )* )?

CLASES ::= 'class' 'id' ('inherit' 'id')? '{' CUERPOCLASE '}'
CUERPOCLASE ::= (PRIVILAGES DECLARACION | FUNCIONES)+

CUERPOFUNCION ::= (DECLARACION | ASIGNACION | CONDICIONAL | CICLO | INVOCACION ';' | IO ';' | RETORNO )*
RETORNO ::= 'give' EXPRESION ';'
INVOCACION ::= ('id' ('.' 'id')? '(' ARGUMENTOS | ('toNumber' | 'toReal' | 'toString') '(' ARGUMENTOPOSIBLE) ')'
IO ::= 'print' '(' ARGUMENTOSPRINT ')' | 'read' '(' IDENTIFICADOR ')'
ARGUMENTOS ::= (VALORARGUMENTOS (',' VALORARGUMENTOS)*)?
VALORARGUMENTOS ::= '&'? IDENTIFICADOR | EXPRESION
ARGUMENTOSPRINT ::= ARGUMENTOPOSIBLE (',' ARGUMENTOPOSIBLE)*
ARGUMENTOPOSIBLE ::= EXPRESION

CICLO ::= CICLOESTATICO | CICLODINAMICO
CICLOESTATICO ::= 'for' 'id' 'in' '(' VALOR '_' VALOR ')' 'step' VALOR '{' CUERPOFUNCION '}'
CICLODINAMICO ::= 'while' '(' EXPRESION ')'  '{' CUERPOFUNCION '}'
CONDICIONAL ::= 'if' '(' EXPRESION ')' '{' CUERPOFUNCION '}' ('elif' '(' EXPRESION ')' '{' CUERPOFUNCION '}')* ('else' '{' CUERPOFUNCION '}')?
ASIGNACION ::= IDENTIFICADOR '=' EXPRESION ';'
DECLARACION ::= TIPOVARIABLE 'id' ('[' VALOR ']' | '=' EXPRESION)? (',' 'id' ('[' VALOR ']' | '=' EXPRESION)?)* ';'

EXPRESION ::= EXPRESIONII ('OR' EXPRESIONII)*
EXPRESIONII ::= EXPRESIONIII ('AND' EXPRESIONIII)*
EXPRESIONIII ::= EXPRESIONIV (('=='|'<>'|'<='|'>=') EXPRESIONIV)*
EXPRESIONIV ::= EXPRESIONV (('+'|'-') EXPRESIONV)*
EXPRESIONV ::= EXPRESIONVI (('*'|'/') EXPRESIONVI)*
EXPRESIONVI ::= VALOR | ('!'|'-')? '(' EXPRESION ')'

VALOR ::= IDENTIFICADOR | INVOCACION | 'cnst String' | VALORBOOLEANO | '-'? 'const Integer' | '-'? 'const Double'
VALORBOOLEANO ::= 'true' | 'false'
IDENTIFICADOR ::= 'id' ('.' 'id' )? ( '[' VALOR ']' )?
